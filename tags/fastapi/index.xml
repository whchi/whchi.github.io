<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>fastapi on 社畜人生</title>
    <link>http://shachiku.life/tags/fastapi/</link>
    <description>Recent content in fastapi on 社畜人生</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <copyright>&amp;copy; whchi 2018</copyright>
    <lastBuildDate>Fri, 16 Dec 2022 13:57:12 +0800</lastBuildDate><atom:link href="http://shachiku.life/tags/fastapi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Setup FastAPI Debugger in VSCode With Docker</title>
      <link>http://shachiku.life/2022/12/setup-fastapi-debugger-in-vscode-with-docker/</link>
      <pubDate>Fri, 16 Dec 2022 13:57:12 +0800</pubDate>
      
      <guid>http://shachiku.life/2022/12/setup-fastapi-debugger-in-vscode-with-docker/</guid>
      <description>The key is launch.json and tasks.json and uvicorn --workers=1
Context Local for python app, docker container for non-application services like database/redis&amp;hellip;etc
If all of your services are run in container you SHOULD use remote debug
0. Dockerfile Here I use docker-compose as example
docker-compose.debug.yml version: &amp;#34;3.8&amp;#34; services: pgsql: image: postgres:13 restart: unless-stopped environment: - POSTGRES_HOST_AUTH_METHOD=trust - POSTGRES_USER=root - POSTGRES_PASSWORD= - POSTGRES_DB=postgres volumes: - postgres:/var/lib/postgresql/data ports: - &amp;#39;5432:5432&amp;#39; privileged: true volumes: postgres: 1.</description>
    </item>
    
    <item>
      <title>Setup FastAPI Debugger in PyCharm With Docker</title>
      <link>http://shachiku.life/2022/12/setup-fastapi-debugger-in-pycharm-with-docker/</link>
      <pubDate>Fri, 16 Dec 2022 11:58:19 +0800</pubDate>
      
      <guid>http://shachiku.life/2022/12/setup-fastapi-debugger-in-pycharm-with-docker/</guid>
      <description>The key is running only one worker when start uvicorn
Context Local for python app, docker container for non-application services like database/redis&amp;hellip;etc
If all of your services are run in container you SHOULD use remote debug
0. Dockerfile Here I use docker-compose as example
docker-compose.debug.yml version: &amp;#34;3.8&amp;#34; services: pgsql: image: postgres:13 restart: unless-stopped environment: - POSTGRES_HOST_AUTH_METHOD=trust - POSTGRES_USER=root - POSTGRES_PASSWORD= - POSTGRES_DB=postgres volumes: - postgres:/var/lib/postgresql/data ports: - &amp;#39;5432:5432&amp;#39; privileged: true volumes: postgres: 1.</description>
    </item>
    
  </channel>
</rss>
