<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on 雜談與紀錄</title>
    <link>https://whchi.github.io/tags/git/</link>
    <description>Recent content in Git on 雜談與紀錄</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <copyright>&amp;copy; whchi 2018</copyright>
    <lastBuildDate>Fri, 21 Dec 2018 09:35:24 +0800</lastBuildDate>
    
	<atom:link href="https://whchi.github.io/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>git 管理子庫的兩種方式</title>
      <link>https://whchi.github.io/posts/difference-between-subtree-and-submodule/</link>
      <pubDate>Fri, 21 Dec 2018 09:35:24 +0800</pubDate>
      
      <guid>https://whchi.github.io/posts/difference-between-subtree-and-submodule/</guid>
      <description>最近架設 hugo 時查詢的資料發現有使用git subtree跟git submodule兩種抓 theme 的方法，研究後把差別記錄在這
主要差異 submodule: 適合不需對 sub repo 進行 push 的動作時使用 subtree: 適合需要把 master repo 的某些 feature 獨立成一個 git branch 時使用
subtree  concept
把整個外部 repo 以及 commit log 拷貝到新的 repo 中，如同名稱一樣，就是「子樹」的概念，可把它視為完全獨立於 master repo 底下的 repo init  remote as subtree: git remote add {remote-name} {remote repo} + git subtree add -P {localModulePath} {remote-name} {ref branch} local as subtree: git subtree split -P {localModulePath} -b {ref branch}  delete</description>
    </item>
    
  </channel>
</rss>